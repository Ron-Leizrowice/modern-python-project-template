target-version = "py313"
line-length = 120
exclude = []

format.indent-style = "space"
format.quote-style = "double"
format.line-ending = "auto"
format.skip-magic-trailing-comma = false
lint.select = [ 
  "ERA",    # [Disallow commented-out code](https://docs.astral.sh/ruff/rules/#eradicate-era)
  "YTT",    # [Ensure correct usage of `sys.version`](https://docs.astral.sh/ruff/rules/#flake8-2020-ytt)
  "ANN",    # [Enforces PEP 3107 â€“ Function Annotations](https://docs.astral.sh/ruff/rules/#flake8-annotations-ann)
  "ASYNC",  # [Opinionated rules regarding Trio/AnyIO/asyncio](https://docs.astral.sh/ruff/rules/#flake8-async-async)
  "S",      # [Opinionated rules from Bandit regarding security](https://docs.astral.sh/ruff/rules/#flake8-bandit-s)
  "FBT",    # [Catches "boolean trap" issues](https://docs.astral.sh/ruff/rules/#flake8-bandit-s)
  "B",      # [Bugbear opinionated linting rules](https://docs.astral.sh/ruff/rules/#flake8-bugbear-b)
  "A",      # [Check for python builtins being used as variables or parameters.](https://docs.astral.sh/ruff/rules/#flake8-builtins-a)
  "COM",    # [Opinionated rules regarding trailing commas](https://docs.astral.sh/ruff/rules/#flake8-commas-com)
  "C4",     # [Opinionated rules regarding comprehensions](https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4)
  "DTZ",    # [Bans usage of unsafe naive datetime class](https://docs.astral.sh/ruff/rules/#flake8-datetimez-dtz)
  "FA",     # [Ensures usage of `__future__` imports](https://docs.astral.sh/ruff/rules/#flake8-future-imports-fa)
  "ISC",    # [Rules regarding implicit string concatenation](https://docs.astral.sh/ruff/rules/#flake8-implicit-str-concat-isc)
  "ICN",    # [Opinionated rules regarding import conventions](https://docs.astral.sh/ruff/rules/#flake8-import-conventions-icn)
  "LOG",    # [Opinionated rules regarding logging](https://docs.astral.sh/ruff/rules/#flake8-logging-format-log)
  "INP",    # [Requires `__init__.py` files to be present](https://docs.astral.sh/ruff/rules/#flake8-no-pep420-inp)
  "PIE",    # [Misc flake8 lints](https://docs.astral.sh/ruff/rules/#flake8-pie-pie)
  "PYI",    # [Opinionated rules regarding type annotations](https://docs.astral.sh/ruff/rules/#flake8-pyi-pyi)
  "PT",     # [Pytest style rules](https://docs.astral.sh/ruff/rules/#flake8-pytest-pt)
  "Q",      # [Opinionated rules regarding quotes](https://docs.astral.sh/ruff/rules/#flake8-quotes-q)
  "RET",    # [Opinionated rules regarding return statements](https://docs.astral.sh/ruff/rules/#flake8-returning-ret)
  "SLF",    # [Detects private member access](https://docs.astral.sh/ruff/rules/#flake8-self-slf)
  "SIM",    # [Rules to simplify code](https://docs.astral.sh/ruff/rules/#flake8-simplify-sim)
  "SLOT",   # [Opinionated rules regarding `__slots__`](https://docs.astral.sh/ruff/rules/#flake8-slots-slot)
  "TID",    # [Rules for tidy imports](https://docs.astral.sh/ruff/rules/#flake8-tidy-imports-tid)
  "TC",     # [Opinionated rules regarding type checking](https://docs.astral.sh/ruff/rules/#flake8-type-checking-tc)
  "ARG",    # [Detects unused function arguments](https://docs.astral.sh/ruff/rules/#flake8-unused-arguments-arg)
  "PTH",    # [Enforces uses of pathlib](https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth)
  "I",      # [Import sorting](https://docs.astral.sh/ruff/rules/#isort-i)
  "N",      # [Naming convention rules](https://docs.astral.sh/ruff/rules/#pep8-naming-n)
  "PERF",   # [Performance related linting rules](https://docs.astral.sh/ruff/rules/#flake8-performance-perf)
  "E",      # [Pycodestyle Errors](https://docs.astral.sh/ruff/rules/#pycodestyle-e)
  "W",      # [Pycodestyle Warnings](https://docs.astral.sh/ruff/rules/#pycodestyle-w)
  "D",      # [Docstring linting rules](https://docs.astral.sh/ruff/rules/#pydocstyle-d)
  "F",      # [Pyflakes linting rules](https://docs.astral.sh/ruff/rules/#pyflakes-f)
  "PL",     # [Type checking linting rules](https://docs.astral.sh/ruff/rules/#mypy-pl)
  "UP",     # [Automatically upgrades syntax to newer python versions](https://docs.astral.sh/ruff/rules/#pyupgrade-up)
  "FURB",   # [Modernization rules](https://docs.astral.sh/ruff/rules/#flake8-future-furb)
  "RUF",   # [Ruff specific linting rules](https://docs.astral.sh/ruff/rules/#ruff-ruff)
  # "FAST",   # [FastAPI specific linting rules](https://docs.astral.sh/ruff/rules/#flake8-fastapi-fast) - Uncomment if using FastAPI
  # "DJ",     # [Django specific linting rules](https://docs.astral.sh/ruff/rules/#flake8-django-dj) - Uncomment if using Django
  # "NPY",    # [NumPy specific linting rules](https://docs.astral.sh/ruff/rules/#flake8-numpy-npy) - Uncomment if using NumPy
  # "PD",     # [Pandas specific linting rules](https://docs.astral.sh/ruff/rules/#flake8-pandas-pd) - Uncomment if using Pandas
]
lint.ignore = [
  "COM812", # Disabled for compatibility with ruff formatter
  "D100",   # Allow missing docstrings in module
  "D102",   # Allow missing docstrings in public methods
  "D104",   # Allow missing docstrings in public packages
  "D105",   # Allow missing docstrings in magic methods
  "D107",   # Allow missing docstrings in __init__ methods
  "D202",           # Allow blank lines after function docstrings
  "D203",           # Allow blank lines before class docstrings
  "D213",           # Allow multi-line docstring summary to start at the second line
  "D202",   # Allow blank line after docstring
]
lint.pydocstyle.convention = "google"

[lint.per-file-ignores]
"tests/*" = [ "S101", "PLC0415", "D103" ]  # Allow assert statements in tests